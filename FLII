var Colombia = ee.FeatureCollection("USDOS/LSIB_SIMPLE/2017")
              .filter(ee.Filter.eq('country_na', 'Colombia'));

var esa = ee.Image('users/forestIntegrityONU/ESA_2019').clip(Colombia);
var trans = ee.Image('users/forestIntegrityONU/Trans_2014');
var poten = ee.Image('users/forestIntegrityONU/Ecos_Poten');
var Bosque_Etter = ee.Image('users/forestIntegrityONU/Bosque_Etter');
var Embalses = ee.Image('users/forestIntegrityONU/Embalses');

// First visualization
Map.addLayer(esa,{min:10, max: 220},'ESA',false);
Map.addLayer(trans,{min:0, max:1, palette:['lightgrey','red']},'Trans',false);
Map.addLayer(poten,{},'Potential',false);
Map.addLayer(Bosque_Etter,{min: 0, max: 1, palette: ['lightgrey','green']},'Bosque potencial',false);
Map.addLayer(Embalses,{min: 0, max: 1},'Embalses',false);

// Band Information ------------------------------------------------------------------
print(esa,'ESA');
print(trans,'TRANS');
print(poten,'POTEN');
print(Embalses,'EMBALSES');

// RasterStack construction ----------------------------------------------------------
var stack = esa.select(['b1'],['esa']).int();
var stack1 = trans.select(['b1'],['trans']).int();
var stack2 = poten.select(['b1'],['poten']).int();
var stack3 = Embalses.select(['b1'],['water']).int();
var lu = stack.addBands(stack1).addBands(stack2).addBands(stack3);
print(lu);

// Land use Automation with footprint values -----------------------------------------

var lu_codes = lu.expression(
    "(b('esa')) + (((b('trans')+ 1) * 1000)) + (((b('poten')*10000))) + (((b('water')+ 1) * 1000000))")
      .float();

Map.addLayer(lu_codes, {min: 1011010, max: 2812220}, 'c√≥digos para LU', false);

var fromToFc = ee.FeatureCollection('users/forestIntegrityONU/Codigos_huella');

var propNames = ee.List(['from', 'to']);
var fromToList = ee.List(
  fromToFc.reduceColumns({
    reducer: ee.Reducer.toList().repeat(propNames.size()),
    selectors: propNames
  })
  .get('list')
);

var from = fromToList.get(0);
var to = fromToList.get(1);

var reclassed_lu = lu_codes.remap(from, to, null, 'esa');

// Lu values adjusted with betas --------------------------------------------------------

var beta_func = function(image,exp_gamma){
              return ee.Image(1).subtract(image.multiply(-1).multiply(ee.Number(exp_gamma)).exp());
              };
              
var reclassed_lu_adjusted = beta_func(reclassed_lu, 1.381551056);

Map.addLayer(reclassed_lu_adjusted, {min: 0, max: 1, palette: ['green','red']}, 
              'GEE Reclass LU ajustado con Beta', false);

// Inputs for SCI Index construction (Hansen,2019) --------------------------------------------------

var merged_img = ee.ImageCollection(['users/andrewjhansen31/treeCover_SA', 
                  'users/andrewjhansen31/20N_080W_treecover2010_v3']).mosaic();
var merged_img2 = ee.ImageCollection([merged_img, 'users/andrewjhansen31/20N_070W_treecover2010_v3'])
                  .mosaic();
var Hansen_lyear = ee.Image('UMD/hansen/global_forest_change_2018_v1_6');
var lossYear = Hansen_lyear.select(['lossyear']);
var forest = merged_img2.select(['b1'],['treecover']);
var height = ee.Image('users/andrewjhansen31/treeheight_SA').select(['b1'],['height']);

// Construction of SCI Index ---------------------------------------------------------------------------
var sciImage = ee.Image(0);

var sciImage18 = lossYear.gte(13).and(lossYear.lte(18)).or(forest.lt(25)).or(height.lte(5)).multiply(18);
var sciImage17 = lossYear.gte(1).and(lossYear.lte(12)).and(height.gt(5)).and(height.lte(15))
                .and(forest.gte(25)).and(forest.lte(75)).multiply(17);
var sciImage16 = lossYear.gte(1).and(lossYear.lte(12)).and(height.gt(5)).and(height.lte(15))
                .and(forest.gt(75)).and(forest.lte(95)).multiply(16);
var sciImage15 = lossYear.gte(1).and(lossYear.lte(12)).and(height.gt(5)).and(height.lte(15))
                .and(forest.gt(95)).multiply(15);
var sciImage14 = lossYear.gte(1).and(lossYear.lte(12)).and(height.gt(15)).and(height.lte(20))
                .and(forest.gte(25)).and(forest.lte(75)).multiply(14);
var sciImage13 = lossYear.gte(1).and(lossYear.lte(12)).and(height.gt(15)).and(height.lte(20))
                .and(forest.gt(75) ).and(forest.lte(95)).multiply(13);
var sciImage12 = lossYear.gte(1).and(lossYear.lte(12)).and(height.gt(15)).and(height.lte(20))
                .and(forest.gt(95)).multiply(12);
var sciImage11 = lossYear.gte(1).and(lossYear.lte(12)).and(height.gt(20)).and(forest.gte(25))
                .and(forest.lte(75)).multiply(11);
var sciImage102 = lossYear.gte(1).and(lossYear.lte(12)).and(height.gt(20)).and(forest.gt(75))
                .and(forest.lte(95)).multiply(10);
var sciImage10 = lossYear.gte(1).and(lossYear.lte(12)).and(height.gt(20)).and(forest.gt(95)).multiply(10);
var sciImage3 = lossYear.lt(1).and(height.gt(20)).and(forest.gte(25)).and(forest.lte(75).multiply(3));
var sciImage2 = lossYear.lt(1).and(height.gt(20)).and(forest.gte(75)).and(forest.lte(95)).multiply(2);
var sciImage1 = lossYear.lt(1).and(height.gt(20)).and(forest.gt(95)).multiply(1);
var sciImage9 = lossYear.lt(1).and(height.gt(5)).and(height.lte(15)).and(forest.gte(25))
                .and(forest.lte(75)).multiply(9);
var sciImage8 = lossYear.lt(1).and(height.gt(5)).and(height.lte(15)).and(forest.gt(75))
                .and(forest.lte(95)).multiply(8);
var sciImage7 = lossYear.lt(1).and(height.gt(5)).and(height.lte(15)).and(forest.gt(95)).multiply(7);
var sciImage6 = lossYear.lt(1).and(height.gt(15)).and(height.lte(20)).and(forest.gte(25))
                .and(forest.lte(75)).multiply(6);
var sciImage5 = lossYear.lt(1).and(height.gt(15)).and(height.lte(20)).and(forest.gt(75))
                .and(forest.lte(95)).multiply(5);
var sciImage4 = lossYear.lt(1).and(height.gt(15)).and(height.lte(20)).and(forest.gt(95)).multiply(4);

var sci1to4 = sciImage1.add(sciImage2).add(sciImage3).add(sciImage4);
var sci5to9 = sciImage5.add(sciImage6).add(sciImage7).add(sciImage8).add(sciImage9);
var sci10to14 = sciImage10.add(sciImage11).add(sciImage12).add(sciImage13).add(sciImage14);//.add(sciImage102);
var sci15to18 = sciImage15.add(sciImage16).add(sciImage17).add(sciImage18);

var sciFinalnew = sci1to4.add(sci5to9).add(sci10to14).add(sci15to18).add(sciImage102).rename('SCInew');

print(sciFinalnew);

// Clip the image to Colombia
var clippedSCInew = sciFinalnew.clip(Colombia);

var viz_sci = {min: 0, max: 18, palette:['#440154', '#433982', '#30678D', '#218F8B', '#36B677', 
                                          '#8ED542', '#FDE725']};

Map.addLayer(clippedSCInew, viz_sci, "SCI_Clipped_Colombia",false);

var sci_0 = clippedSCInew.multiply(Bosque_Etter);
Map.addLayer(sci_0, viz_sci, "SCI_Clipped_Colombia con 0", false);

var sci_adjusted = beta_func(sci_0, 0.19804205239117);

Map.addLayer(sci_adjusted, {min: 0, max: 1, palette: ['green','yellow', 'orange', 'red']}, 
              'GEE SCI ajustado con Beta', false);
              
// Non-automated human spatial footprint components (Correa & Grantham) ------------------------------------
var ti = ee.Image('users/forestIntegrityONU/Raw_ti15');
var pd = ee.Image('users/forestIntegrityONU/Raw_pd15');

var pd_adjusted = beta_func(pd, 0.0022);
Map.addLayer(pd_adjusted, {min: 0, max: 1, palette: ['green','yellow', 'orange', 'red']}, 
              'pd ajustado con Beta',false);

var ti_adjusted = beta_func(ti, 0.0138629436035916);
Map.addLayer(ti_adjusted, {min: 0, max: 1, palette: ['green','yellow', 'orange', 'red']}, 
              'ti ajustado con Beta',false);

var anthrodirectratio = 1;
var anthrohighway =  '1';

var d01=15;
var d02=11;
var d03=9;
var d04=7;
var d05=6;
var d06=5;
var d07=4;
var d08=3;
var d09=2;
var d10=2;
var d11=4;

var  rast_highway_density_300m_direct = 
    (ee.Image('users/aduncan/osm_earth/dir_highway_bridleway_density_300m').multiply((d09)) 
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_bus_guideway_density_300m').multiply((d06))) 
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_cycleway_density_300m').multiply((d09))) 
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_elevator_density_300m').multiply((d11))) 
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_escape_density_300m').multiply((d08))) 
    .add(ee.Image('users/yourecoveredinbees/osm_earth/dir_highway_footway_density_300mA').multiply((d10)))
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_living_street_density_300m').multiply((d07))) 
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_mini_roundabout_density_300m').multiply((d07))) 
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_motorway_density_300m').multiply((d01))) 
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_motorway_link_density_300m').multiply((d01))) 
    .add(ee.Image('users/yourecoveredinbees/osm_earth/dir_highway_path_density_300mA').multiply((d10)))
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_pedestrian_density_300m').multiply((d10))) 
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_primary_density_300m').multiply((d03))) 
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_primary_link_density_300m').multiply((d03)))
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_raceway_density_300m').multiply((d01))) 
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_rest_area_density_300m').multiply((d11))) 
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_road_density_300m').multiply((d07))) 
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_secondary_density_300m').multiply((d04))) 
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_secondary_link_density_300m').multiply((d04))) 
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_service_density_300mA').multiply((d06)))
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_steps_density_300m').multiply((d10))) 
    .add(ee.Image('users/yourecoveredinbees/osm_earth/dir_highway_tertiary_density_300mA').multiply((d05))) 
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_tertiary_link_density_300m').multiply((d05))) 
    .add(ee.Image('users/wcsbackup/osm_earth/dir_highway_track_density_300m').multiply((d08))) 
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_trunk_density_300m').multiply((d02))) 
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_trunk_link_density_300m').multiply((d02))) 
    .add(ee.Image('users/aduncan/osm_earth/dir_highway_turning_circle_NO_density_300m').multiply((d07)))
    .add(ee.Image('users/yourecoveredinbees/osm_earth/dir_highway_unclassified_density_300m_A').multiply((d07)))
    .add(ee.Image('users/aduncan/intact_default_CROP/groads_additions').multiply((d07)))
      ).multiply(anthrodirectratio);

var road_adjusted = beta_func(rast_highway_density_300m_direct, 0.462098122538821);
Map.addLayer(road_adjusted.clip(Colombia), {min: 0, max: 1, 
          palette: ['green', 'yellow', 'orange', 'red']}, 'road ajustado con Beta',false);

// All variables to direct pressure -----------------------------------------------------------------------
var direct_pressure_iavh = reclassed_lu_adjusted.add(sci_adjusted).add(pd_adjusted).add(ti_adjusted).add(road_adjusted).rename('Dir_Press_iavh'); //Resultado en GEE
Map.addLayer(direct_pressure_iavh, {min: 0, max: 4, palette: ['green','yellow','orange','red']}, 'Direct pressure Beta',false);

// INDIRECT PRESSURE SCORE -------------------------------------------------------------------------------

var direct_pressure_iavh_noti = reclassed_lu_adjusted.add(sci_adjusted).add(pd_adjusted).add(road_adjusted).rename('Dir_Press_iavh'); //Resultado en GEE

var scale = 300;

var colorlist = ['224f1a','a3ff76','feff6f','a09568','ffa802','f7797c','fb0102','d87136','a90086','7a1ca5','421137','000000'];

var array_calc = function(number){
  var x = ee.Number(0.75).pow(ee.Number(number));
  // the 0s are being recorded as ones after this calculation
  return x;
  };

var weight1 = [999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,19,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999].map(function(number){return array_calc(number)});
var weight2 = [999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,18.9736659610103,18.6815416922694,18.4390889145858,18.2482875908947,18.1107702762748,18.0277563773199,18,18.0277563773199,18.1107702762748,18.2482875908947,18.4390889145858,18.6815416922694,18.9736659610103,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999].map(function(number){return array_calc(number)});
var weight3 = [999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,18.7882942280559,18.3847763108502,18.0277563773199,17.7200451466694,17.464249196573,17.2626765016321,17.1172427686237,17.0293863659264,17,17.0293863659264,17.1172427686237,17.2626765016321,17.464249196573,17.7200451466694,18.0277563773199,18.3847763108502,18.7882942280559,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999,999999].map(function(number){return array_calc(number)});
var weight4 = [999999,999999,999999,999999,999999,999999,999999,999999,999999,18.8679622641132,18.3575597506858,17.8885438199983,17.464249196573,17.0880074906351,16.7630546142402,16.4924225024706,16.2788205960997,16.1245154965971,16.0312195418814,16,16.0312195418814,16.1245154965971,16.2788205960997,16.4924225024706,16.7630546142402,17.0880074906351,17.464249196573,17.8885438199983,18.3575597506858,18.8679622641132,999999,999999,999999,999999,999999,999999,999999,999999,999999].map(function(number){return array_calc(number)});
var weight5 = [999999,999999,999999,999999,999999,999999,999999,999999,18.6010752377383,18.0277563773199,17.4928556845359,17,16.5529453572468,16.1554944214035,15.8113883008419,15.52417469626,15.2970585407784,15.1327459504216,15.0332963783729,15,15.0332963783729,15.1327459504216,15.2970585407784,15.52417469626,15.8113883008419,16.1554944214035,16.5529453572468,17,17.4928556845359,18.0277563773199,18.6010752377383,999999,999999,999999,999999,999999,999999,999999,999999].map(function(number){return array_calc(number)});
var weight6 = [999999,999999,999999,999999,999999,999999,999999,18.4390889145858,17.8044938147649,17.2046505340853,16.6433169770932,16.1245154965971,15.6524758424985,15.2315462117278,14.8660687473185,14.560219778561,14.3178210632764,14.142135623731,14.0356688476182,14,14.0356688476182,14.142135623731,14.3178210632764,14.560219778561,14.8660687473185,15.2315462117278,15.6524758424985,16.1245154965971,16.6433169770932,17.2046505340853,17.8044938147649,18.4390889145858,999999,999999,999999,999999,999999,999999,999999].map(function(number){return array_calc(number)});
var weight7 = [999999,999999,999999,999999,999999,999999,18.3847763108502,17.6918060129541,17.0293863659264,16.4012194668567,15.8113883008419,15.2643375224737,14.7648230602334,14.3178210632764,13.9283882771841,13.6014705087354,13.3416640641263,13.1529464379659,13.0384048104053,13,13.0384048104053,13.1529464379659,13.3416640641263,13.6014705087354,13.9283882771841,14.3178210632764,14.7648230602334,15.2643375224737,15.8113883008419,16.4012194668567,17.0293863659264,17.6918060129541,18.3847763108502,999999,999999,999999,999999,999999,999999].map(function(number){return array_calc(number)});
var weight8 = [999999,999999,999999,999999,999999,18.4390889145858,17.6918060129541,16.9705627484771,16.2788205960997,15.6204993518133,15,14.422205101856,13.8924439894498,13.4164078649987,13,12.6491106406735,12.369316876853,12.1655250605964,12.0415945787923,12,12.0415945787923,12.1655250605964,12.369316876853,12.6491106406735,13,13.4164078649987,13.8924439894498,14.422205101856,15,15.6204993518133,16.2788205960997,16.9705627484771,17.6918060129541,18.4390889145858,999999,999999,999999,999999,999999].map(function(number){return array_calc(number)});
var weight9 = [999999,999999,999999,999999,18.6010752377383,17.8044938147649,17.0293863659264,16.2788205960997,15.556349186104,14.8660687473185,14.2126704035519,13.6014705087354,13.0384048104053,12.5299640861417,12.0830459735946,11.7046999107196,11.4017542509914,11.180339887499,11.0453610171873,11,11.0453610171873,11.180339887499,11.4017542509914,11.7046999107196,12.0830459735946,12.5299640861417,13.0384048104053,13.6014705087354,14.2126704035519,14.8660687473185,15.556349186104,16.2788205960997,17.0293863659264,17.8044938147649,18.6010752377383,999999,999999,999999,999999].map(function(number){return array_calc(number)});
var weight10 = [999999,999999,999999,18.8679622641132,18.0277563773199,17.2046505340853,16.4012194668567,15.6204993518133,14.8660687473185,14.142135623731,13.4536240470737,12.8062484748657,12.2065556157337,11.6619037896906,11.180339887499,10.770329614269,10.4403065089106,10.1980390271856,10.0498756211209,10,10.0498756211209,10.1980390271856,10.4403065089106,10.770329614269,11.180339887499,11.6619037896906,12.2065556157337,12.8062484748657,13.4536240470737,14.142135623731,14.8660687473185,15.6204993518133,16.4012194668567,17.2046505340853,18.0277563773199,18.8679622641132,999999,999999,999999].map(function(number){return array_calc(number)});
var weight11 = [999999,999999,999999,18.3575597506858,17.4928556845359,16.6433169770932,15.8113883008419,15,14.2126704035519,13.4536240470737,12.7279220613579,12.0415945787923,11.4017542509914,10.816653826392,10.295630140987,9.8488578017961,9.48683298050514,9.21954445729289,9.05538513813742,9,9.05538513813742,9.21954445729289,9.48683298050514,9.8488578017961,10.295630140987,10.816653826392,11.4017542509914,12.0415945787923,12.7279220613579,13.4536240470737,14.2126704035519,15,15.8113883008419,16.6433169770932,17.4928556845359,18.3575597506858,999999,999999,999999].map(function(number){return array_calc(number)});
var weight12 = [999999,999999,18.7882942280559,17.8885438199983,17,16.1245154965971,15.2643375224737,14.422205101856,13.6014705087354,12.8062484748657,12.0415945787923,11.3137084989848,10.6301458127347,10,9.4339811320566,8.94427190999916,8.54400374531753,8.24621125123532,8.06225774829855,8,8.06225774829855,8.24621125123532,8.54400374531753,8.94427190999916,9.4339811320566,10,10.6301458127347,11.3137084989848,12.0415945787923,12.8062484748657,13.6014705087354,14.422205101856,15.2643375224737,16.1245154965971,17,17.8885438199983,18.7882942280559,999999,999999].map(function(number){return array_calc(number)});
var weight13 = [999999,999999,18.3847763108502,17.464249196573,16.5529453572468,15.6524758424985,14.7648230602334,13.8924439894498,13.0384048104053,12.2065556157337,11.4017542509914,10.6301458127347,9.89949493661167,9.21954445729289,8.60232526704263,8.06225774829855,7.61577310586391,7.28010988928052,7.07106781186548,7,7.07106781186548,7.28010988928052,7.61577310586391,8.06225774829855,8.60232526704263,9.21954445729289,9.89949493661167,10.6301458127347,11.4017542509914,12.2065556157337,13.0384048104053,13.8924439894498,14.7648230602334,15.6524758424985,16.5529453572468,17.464249196573,18.3847763108502,999999,999999].map(function(number){return array_calc(number)});
var weight14 = [999999,18.9736659610103,18.0277563773199,17.0880074906351,16.1554944214035,15.2315462117278,14.3178210632764,13.4164078649987,12.5299640861417,11.6619037896906,10.816653826392,10,9.21954445729289,8.48528137423857,7.81024967590665,7.21110255092798,6.70820393249937,6.32455532033676,6.08276253029822,6,6.08276253029822,6.32455532033676,6.70820393249937,7.21110255092798,7.81024967590665,8.48528137423857,9.21954445729289,10,10.816653826392,11.6619037896906,12.5299640861417,13.4164078649987,14.3178210632764,15.2315462117278,16.1554944214035,17.0880074906351,18.0277563773199,18.9736659610103,999999].map(function(number){return array_calc(number)});
var weight15 = [999999,18.6815416922694,17.7200451466694,16.7630546142402,15.8113883008419,14.8660687473185,13.9283882771841,13,12.0830459735946,11.180339887499,10.295630140987,9.4339811320566,8.60232526704263,7.81024967590665,7.07106781186548,6.40312423743285,5.8309518948453,5.3851648071345,5.09901951359278,5,5.09901951359278,5.3851648071345,5.8309518948453,6.40312423743285,7.07106781186548,7.81024967590665,8.60232526704263,9.4339811320566,10.295630140987,11.180339887499,12.0830459735946,13,13.9283882771841,14.8660687473185,15.8113883008419,16.7630546142402,17.7200451466694,18.6815416922694,999999].map(function(number){return array_calc(number)});
var weight16 = [999999,18.4390889145858,17.464249196573,16.4924225024706,15.52417469626,14.560219778561,13.6014705087354,12.6491106406735,11.7046999107196,10.770329614269,9.8488578017961,8.94427190999916,8.06225774829855,7.21110255092798,6.40312423743285,5.65685424949238,5,4.47213595499958,4.12310562561766,4,4.12310562561766,4.47213595499958,5,5.65685424949238,6.40312423743285,7.21110255092798,8.06225774829855,8.94427190999916,9.8488578017961,10.770329614269,11.7046999107196,12.6491106406735,13.6014705087354,14.560219778561,15.52417469626,16.4924225024706,17.464249196573,18.4390889145858,999999].map(function(number){return array_calc(number)});
var weight17 = [999999,18.2482875908947,17.2626765016321,16.2788205960997,15.2970585407784,14.3178210632764,13.3416640641263,12.369316876853,11.4017542509914,10.4403065089106,9.48683298050514,8.54400374531753,7.61577310586391,6.70820393249937,5.8309518948453,5,4.24264068711929,3.60555127546399,3.16227766016838,3,3.16227766016838,3.60555127546399,4.24264068711929,5,5.8309518948453,6.70820393249937,7.61577310586391,8.54400374531753,9.48683298050514,10.4403065089106,11.4017542509914,12.369316876853,13.3416640641263,14.3178210632764,15.2970585407784,16.2788205960997,17.2626765016321,18.2482875908947,999999].map(function(number){return array_calc(number)});
var weight18 = [999999,18.1107702762748,17.1172427686237,16.1245154965971,15.1327459504216,14.142135623731,13.1529464379659,12.1655250605964,11.180339887499,10.1980390271856,9.21954445729289,8.24621125123532,7.28010988928052,6.32455532033676,5.3851648071345,4.47213595499958,3.60555127546399,2.82842712474619,2.23606797749979,2,2.23606797749979,2.82842712474619,3.60555127546399,4.47213595499958,5.3851648071345,6.32455532033676,7.28010988928052,8.24621125123532,9.21954445729289,10.1980390271856,11.180339887499,12.1655250605964,13.1529464379659,14.142135623731,15.1327459504216,16.1245154965971,17.1172427686237,18.1107702762748,999999].map(function(number){return array_calc(number)});
var weight19 = [999999,18.0277563773199,17.0293863659264,16.0312195418814,15.0332963783729,14.0356688476182,13.0384048104053,12.0415945787923,11.0453610171873,10.0498756211209,9.05538513813742,8.06225774829855,7.07106781186548,6.08276253029822,5.09901951359278,4.12310562561766,3.16227766016838,2.23606797749979,1.4142135623731,1,1.4142135623731,2.23606797749979,3.16227766016838,4.12310562561766,5.09901951359278,6.08276253029822,7.07106781186548,8.06225774829855,9.05538513813742,10.0498756211209,11.0453610171873,12.0415945787923,13.0384048104053,14.0356688476182,15.0332963783729,16.0312195418814,17.0293863659264,18.0277563773199,999999].map(function(number){return array_calc(number)});
var weight20 = [19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,999999,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19].map(function(number){return array_calc(number)});

// Assemble a list of lists: the 39x39 kernel weights as a 2-D matrix.
var kernellists = [weight1, weight2, weight3, weight4, weight5, weight6, weight7, weight8, weight9, weight10, weight11, weight12, weight13, weight14,
                  weight15, weight16, weight17, weight18, weight19, weight20, weight19, weight18, weight17, weight16, weight15,  weight14, weight13, weight12, weight11, weight10, weight9, weight8,
                  weight7, weight6, weight5, weight4, weight3, weight2, weight1];

// Create the kernel from the weights.
var fixedkernel = ee.Kernel.fixed(39, 39, kernellists, -20, -20, true); //Kernel normalizado
print(fixedkernel, 'fixed kernel');

var total_indirect_pressure_noti = direct_pressure_iavh_noti.reduceNeighborhood({reducer:ee.Reducer.mean(), kernel:fixedkernel}).multiply(2) //Resultado en GEE
                    .reproject({crs:'EPSG:4326',scale:scale});

Map.addLayer(total_indirect_pressure_noti, {min:0,max:3.5, palette:colorlist},'Short-range Indirect Pressure NoTi',false);

// LONG_RANGE (D*) SCORE ------------------------------------------------------------------------------------------

var array_calc_defaun = function(number){
  return ee.Number(19).subtract(ee.Number(number));
  };

var weight_defaun1 = [19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun2 = [19,19,19,19,19,19,19,19,19,19,19,19,19,18.9736659610103,18.6815416922694,18.4390889145858,18.2482875908947,18.1107702762748,18.0277563773199,18,18.0277563773199,18.1107702762748,18.2482875908947,18.4390889145858,18.6815416922694,18.9736659610103,19,19,19,19,19,19,19,19,19,19,19,19,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun3 = [19,19,19,19,19,19,19,19,19,19,19,18.7882942280559,18.3847763108502,18.0277563773199,17.7200451466694,17.464249196573,17.2626765016321,17.1172427686237,17.0293863659264,17,17.0293863659264,17.1172427686237,17.2626765016321,17.464249196573,17.7200451466694,18.0277563773199,18.3847763108502,18.7882942280559,19,19,19,19,19,19,19,19,19,19,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun4 = [19,19,19,19,19,19,19,19,19,18.8679622641132,18.3575597506858,17.8885438199983,17.464249196573,17.0880074906351,16.7630546142402,16.4924225024706,16.2788205960997,16.1245154965971,16.0312195418814,16,16.0312195418814,16.1245154965971,16.2788205960997,16.4924225024706,16.7630546142402,17.0880074906351,17.464249196573,17.8885438199983,18.3575597506858,18.8679622641132,19,19,19,19,19,19,19,19,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun5 = [19,19,19,19,19,19,19,19,18.6010752377383,18.0277563773199,17.4928556845359,17,16.5529453572468,16.1554944214035,15.8113883008419,15.52417469626,15.2970585407784,15.1327459504216,15.0332963783729,15,15.0332963783729,15.1327459504216,15.2970585407784,15.52417469626,15.8113883008419,16.1554944214035,16.5529453572468,17,17.4928556845359,18.0277563773199,18.6010752377383,19,19,19,19,19,19,19,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun6 = [19,19,19,19,19,19,19,18.4390889145858,17.8044938147649,17.2046505340853,16.6433169770932,16.1245154965971,15.6524758424985,15.2315462117278,14.8660687473185,14.560219778561,14.3178210632764,14.142135623731,14.0356688476182,14,14.0356688476182,14.142135623731,14.3178210632764,14.560219778561,14.8660687473185,15.2315462117278,15.6524758424985,16.1245154965971,16.6433169770932,17.2046505340853,17.8044938147649,18.4390889145858,19,19,19,19,19,19,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun7 = [19,19,19,19,19,19,18.3847763108502,17.6918060129541,17.0293863659264,16.4012194668567,15.8113883008419,15.2643375224737,14.7648230602334,14.3178210632764,13.9283882771841,13.6014705087354,13.3416640641263,13.1529464379659,13.0384048104053,13,13.0384048104053,13.1529464379659,13.3416640641263,13.6014705087354,13.9283882771841,14.3178210632764,14.7648230602334,15.2643375224737,15.8113883008419,16.4012194668567,17.0293863659264,17.6918060129541,18.3847763108502,19,19,19,19,19,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun8 = [19,19,19,19,19,18.4390889145858,17.6918060129541,16.9705627484771,16.2788205960997,15.6204993518133,15,14.422205101856,13.8924439894498,13.4164078649987,13,12.6491106406735,12.369316876853,12.1655250605964,12.0415945787923,12,12.0415945787923,12.1655250605964,12.369316876853,12.6491106406735,13,13.4164078649987,13.8924439894498,14.422205101856,15,15.6204993518133,16.2788205960997,16.9705627484771,17.6918060129541,18.4390889145858,19,19,19,19,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun9 = [19,19,19,19,18.6010752377383,17.8044938147649,17.0293863659264,16.2788205960997,15.556349186104,14.8660687473185,14.2126704035519,13.6014705087354,13.0384048104053,12.5299640861417,12.0830459735946,11.7046999107196,11.4017542509914,11.180339887499,11.0453610171873,11,11.0453610171873,11.180339887499,11.4017542509914,11.7046999107196,12.0830459735946,12.5299640861417,13.0384048104053,13.6014705087354,14.2126704035519,14.8660687473185,15.556349186104,16.2788205960997,17.0293863659264,17.8044938147649,18.6010752377383,19,19,19,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun10 = [19,19,19,18.8679622641132,18.0277563773199,17.2046505340853,16.4012194668567,15.6204993518133,14.8660687473185,14.142135623731,13.4536240470737,12.8062484748657,12.2065556157337,11.6619037896906,11.180339887499,10.770329614269,10.4403065089106,10.1980390271856,10.0498756211209,10,10.0498756211209,10.1980390271856,10.4403065089106,10.770329614269,11.180339887499,11.6619037896906,12.2065556157337,12.8062484748657,13.4536240470737,14.142135623731,14.8660687473185,15.6204993518133,16.4012194668567,17.2046505340853,18.0277563773199,18.8679622641132,19,19,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun11 = [19,19,19,18.3575597506858,17.4928556845359,16.6433169770932,15.8113883008419,15,14.2126704035519,13.4536240470737,12.7279220613579,12.0415945787923,11.4017542509914,10.816653826392,10.295630140987,9.8488578017961,9.48683298050514,9.21954445729289,9.05538513813742,9,9.05538513813742,9.21954445729289,9.48683298050514,9.8488578017961,10.295630140987,10.816653826392,11.4017542509914,12.0415945787923,12.7279220613579,13.4536240470737,14.2126704035519,15,15.8113883008419,16.6433169770932,17.4928556845359,18.3575597506858,19,19,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun12 = [19,19,18.7882942280559,17.8885438199983,17,16.1245154965971,15.2643375224737,14.422205101856,13.6014705087354,12.8062484748657,12.0415945787923,11.3137084989848,10.6301458127347,10,9.4339811320566,8.94427190999916,8.54400374531753,8.24621125123532,8.06225774829855,8,8.06225774829855,8.24621125123532,8.54400374531753,8.94427190999916,9.4339811320566,10,10.6301458127347,11.3137084989848,12.0415945787923,12.8062484748657,13.6014705087354,14.422205101856,15.2643375224737,16.1245154965971,17,17.8885438199983,18.7882942280559,19,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun13 = [19,19,18.3847763108502,17.464249196573,16.5529453572468,15.6524758424985,14.7648230602334,13.8924439894498,13.0384048104053,12.2065556157337,11.4017542509914,10.6301458127347,9.89949493661167,9.21954445729289,8.60232526704263,8.06225774829855,7.61577310586391,7.28010988928052,7.07106781186548,7,7.07106781186548,7.28010988928052,7.61577310586391,8.06225774829855,8.60232526704263,9.21954445729289,9.89949493661167,10.6301458127347,11.4017542509914,12.2065556157337,13.0384048104053,13.8924439894498,14.7648230602334,15.6524758424985,16.5529453572468,17.464249196573,18.3847763108502,19,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun14 = [19,18.9736659610103,18.0277563773199,17.0880074906351,16.1554944214035,15.2315462117278,14.3178210632764,13.4164078649987,12.5299640861417,11.6619037896906,10.816653826392,10,9.21954445729289,8.48528137423857,7.81024967590665,7.21110255092798,6.70820393249937,6.32455532033676,6.08276253029822,6,6.08276253029822,6.32455532033676,6.70820393249937,7.21110255092798,7.81024967590665,8.48528137423857,9.21954445729289,10,10.816653826392,11.6619037896906,12.5299640861417,13.4164078649987,14.3178210632764,15.2315462117278,16.1554944214035,17.0880074906351,18.0277563773199,18.9736659610103,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun15 = [19,18.6815416922694,17.7200451466694,16.7630546142402,15.8113883008419,14.8660687473185,13.9283882771841,13,12.0830459735946,11.180339887499,10.295630140987,9.4339811320566,8.60232526704263,7.81024967590665,7.07106781186548,6.40312423743285,5.8309518948453,5.3851648071345,5.09901951359278,5,5.09901951359278,5.3851648071345,5.8309518948453,6.40312423743285,7.07106781186548,7.81024967590665,8.60232526704263,9.4339811320566,10.295630140987,11.180339887499,12.0830459735946,13,13.9283882771841,14.8660687473185,15.8113883008419,16.7630546142402,17.7200451466694,18.6815416922694,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun16 = [19,18.4390889145858,17.464249196573,16.4924225024706,15.52417469626,14.560219778561,13.6014705087354,12.6491106406735,11.7046999107196,10.770329614269,9.8488578017961,8.94427190999916,8.06225774829855,7.21110255092798,6.40312423743285,5.65685424949238,5,4.47213595499958,4.12310562561766,4,4.12310562561766,4.47213595499958,5,5.65685424949238,6.40312423743285,7.21110255092798,8.06225774829855,8.94427190999916,9.8488578017961,10.770329614269,11.7046999107196,12.6491106406735,13.6014705087354,14.560219778561,15.52417469626,16.4924225024706,17.464249196573,18.4390889145858,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun17 = [19,18.2482875908947,17.2626765016321,16.2788205960997,15.2970585407784,14.3178210632764,13.3416640641263,12.369316876853,11.4017542509914,10.4403065089106,9.48683298050514,8.54400374531753,7.61577310586391,6.70820393249937,5.8309518948453,5,4.24264068711929,3.60555127546399,3.16227766016838,3,3.16227766016838,3.60555127546399,4.24264068711929,5,5.8309518948453,6.70820393249937,7.61577310586391,8.54400374531753,9.48683298050514,10.4403065089106,11.4017542509914,12.369316876853,13.3416640641263,14.3178210632764,15.2970585407784,16.2788205960997,17.2626765016321,18.2482875908947,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun18 = [19,18.1107702762748,17.1172427686237,16.1245154965971,15.1327459504216,14.142135623731,13.1529464379659,12.1655250605964,11.180339887499,10.1980390271856,9.21954445729289,8.24621125123532,7.28010988928052,6.32455532033676,5.3851648071345,4.47213595499958,3.60555127546399,2.82842712474619,2.23606797749979,2,2.23606797749979,2.82842712474619,3.60555127546399,4.47213595499958,5.3851648071345,6.32455532033676,7.28010988928052,8.24621125123532,9.21954445729289,10.1980390271856,11.180339887499,12.1655250605964,13.1529464379659,14.142135623731,15.1327459504216,16.1245154965971,17.1172427686237,18.1107702762748,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun19 = [19,18.0277563773199,17.0293863659264,16.0312195418814,15.0332963783729,14.0356688476182,13.0384048104053,12.0415945787923,11.0453610171873,10.0498756211209,9.05538513813742,8.06225774829855,7.07106781186548,6.08276253029822,5.09901951359278,4.12310562561766,3.16227766016838,2.23606797749979,1.4142135623731,1,1.4142135623731,2.23606797749979,3.16227766016838,4.12310562561766,5.09901951359278,6.08276253029822,7.07106781186548,8.06225774829855,9.05538513813742,10.0498756211209,11.0453610171873,12.0415945787923,13.0384048104053,14.0356688476182,15.0332963783729,16.0312195418814,17.0293863659264,18.0277563773199,19].map(function(number){return array_calc_defaun(number)});
var weight_defaun20 = [19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,19,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19].map(function(number){return array_calc_defaun(number)});

// Assemble a list of lists: the 39x39 kernel weights as a 2-D matrix.
var kernellists_defaun = [weight_defaun1, weight_defaun2, weight_defaun3, weight_defaun4, weight_defaun5, weight_defaun6, weight_defaun7, weight_defaun8, weight_defaun9, weight_defaun10, weight_defaun11, weight_defaun12, weight_defaun13, weight_defaun14,
                  weight_defaun15, weight_defaun16, weight_defaun17, weight_defaun18, weight_defaun19, weight_defaun20, weight_defaun19, weight_defaun18, weight_defaun17, weight_defaun16, weight_defaun15,  weight_defaun14, weight_defaun13, weight_defaun12, weight_defaun11, weight_defaun10, weight_defaun9, weight_defaun8,
                  weight_defaun7, weight_defaun6, weight_defaun5, weight_defaun4, weight_defaun3, weight_defaun2, weight_defaun1];

// Create the kernel from the weights.
var fixedkernel_defaun = ee.Kernel.fixed(39, 39, kernellists_defaun, -20, -20, true);
print(fixedkernel_defaun, 'fixed Kernel defaun');

// Have to unmask the direct pressure, perform the calculation, then mask again because of the changing resolution
var defaun_pressure_iavh = direct_pressure_iavh_noti.reduceNeighborhood({reducer:ee.Reducer.sum(), kernel:fixedkernel_defaun})
                    .reproject({crs:'EPSG:4326',scale:600});

defaun_pressure_iavh = defaun_pressure_iavh.resample().reproject({crs:'EPSG:4326',scale:300}).multiply(0.25);

Map.addLayer(defaun_pressure_iavh,{min:0,max:0.5, palette:colorlist},'Long-range Indirect Pressure noti',false); //Guardado en Asset para facilitar visualizaci√≥n


// Loss of connectivity components (Hansen-Etter-Grantham) --------------------------------------------------------

var hansenloss = ee.Image('UMD/hansen/global_forest_change_2017_v1_5').select('loss');

var loss_classes = ee.Image('users/aduncan/wri/Goode_FinalClassification_19_05pcnt_prj');

var palette_continuous = ['#2b7c00','#c2d426','#e8c754','#675115'];

var palette_trips = ['#7E5D10','#04FF02','#267301'];

var hansenloss_type0 = hansenloss.multiply(loss_classes.eq(0)).selfMask();
Map.addLayer(hansenloss_type0,{palette:['orange']},'Curtis - ???????? loss',false);
var hansenloss_type1 = hansenloss.multiply(loss_classes.eq(1)).selfMask();
Map.addLayer(hansenloss_type1,{palette:['red']},'Curtis - Commodity-driven loss',false);
var hansenloss_type2 = hansenloss.multiply(loss_classes.eq(2)).selfMask();
Map.addLayer(hansenloss_type2,{palette:['yellow']},'Curtis - Shifting agriculture loss',false);
var hansenloss_type3 = hansenloss.multiply(loss_classes.eq(3)).selfMask();
Map.addLayer(hansenloss_type3,{palette:['green']},'Curtis - Forestry loss',false);
var hansenloss_type4 = hansenloss.multiply(loss_classes.eq(4)).selfMask();
Map.addLayer(hansenloss_type4,{palette:['brown']},'Curtis - Wildfire loss',false);
var hansenloss_type5 = hansenloss.multiply(loss_classes.eq(5)).selfMask();
Map.addLayer(hansenloss_type5,{palette:['purple']},'Curtis - Urbanization loss',false);

var fragmincoresize = '20';

var systemscale = '300';

// IAVH current connectivity ---------------------------------------------------------------------------
var total_connectivity_iavh = function(lossyear){
      var hansen = ee.Image('UMD/hansen/global_forest_change_2018_v1_6').select('treecover2000').gt(20);
      var hansen_lossyear = ee.Image('UMD/hansen/global_forest_change_2018_v1_6').select('lossyear');
      var hansen_loss = hansen_lossyear.lte(lossyear).updateMask(hansen_lossyear.neq(0))
                        .multiply(loss_classes.neq(4)).multiply(loss_classes.neq(2))
                        .multiply(loss_classes.neq(3)).unmask(0);
      var hansen_above30 = hansen.subtract(hansen_loss).gt(0)
                        .reproject({crs:'EPSG:4326', scale:ee.Number.parse(systemscale)});
      var hansen_above30_masked = hansen_above30.updateMask(hansen_above30);
      var hansen_no_islet = hansen_above30_masked.connectedPixelCount()
                        .reproject({crs:'EPSG:4326', scale:ee.Number.parse(systemscale)})
                        .gte(ee.Number.parse(fragmincoresize)).unmask(0);
      var gaussian_kernel = ee.Kernel.gaussian({radius:8, sigma:2, units:'pixels'});
      var focal_sum = hansen_no_islet.reproject({crs:'EPSG:4326', scale:10000})
                        .reduceNeighborhood({reducer:ee.Reducer.mean(), kernel:gaussian_kernel})
                        .reproject({crs:'EPSG:4326', scale:5000});

      return focal_sum.resample().reproject({crs:'EPSG:4326', scale:300}).updateMask(hansen_no_islet);
      };

// IAVH potential connectivity ---------------------------------------------------------------------------

var total_connectivity_original_iavh = function(){
  var gaussian_kernel = ee.Kernel.gaussian({radius:8, sigma:2, units:'pixels'});
  var focal_sum = Bosque_Etter.reproject({crs:'EPSG:4326', scale:5000}).reduceNeighborhood({reducer:ee.Reducer.mean(), 
                  kernel:gaussian_kernel}).reproject({crs:'EPSG:4326', scale:5000});
  return focal_sum.resample().reproject({crs:'EPSG:4326', scale:300});
  };

Map.addLayer(total_connectivity_original_iavh(), {palette:['firebrick','orange','blue','green'],min:0,max:1},
              'Colombia Potential connectivity (IAVH)',false);
Map.addLayer(total_connectivity_iavh(2018).clip(Colombia), {palette:['firebrick','orange','blue','green'],min:0,max:1}
              ,'Colombia 2018 connectivity (IAVH)',false);

var LFC = ee.Image(1).subtract(total_connectivity_iavh(2018).clip(Colombia)
          .divide(total_connectivity_original_iavh()));

Map.addLayer(LFC, {min: 0, max: 1, palette: ['green', 'yellow', 'orange', 'red']}, 'LFC Colombia',false);

// FLII Index construction --------------------------------------------------------------------------

var total_pression = direct_pressure_iavh.add(total_indirect_pressure_noti).add(defaun_pressure_iavh)
                    .add(LFC);

var total_pression2 = direct_pressure_iavh_noti.add(total_indirect_pressure_noti).add(defaun_pressure_iavh)
                    .add(LFC);

var final_metric = ee.Image.constant(10).subtract(total_pression.multiply(ee.Number(10)
                      .divide(ee.Number(8))));

var final_metric2 = ee.Image.constant(10).subtract(total_pression2.multiply(ee.Number(10)
                      .divide(ee.Number(8))));
                      
final_metric = final_metric.where(final_metric.lte(0),0);

final_metric2 = final_metric2.where(final_metric.lte(0),0);

Map.addLayer(final_metric, {min:0,max:10, palette: ['red', 'orange', 'yellow', 'green']},
                  'FLII 0 to 10 masked',false); 

Map.addLayer(final_metric2, {min:0,max:10, palette: ['red', 'orange', 'yellow', 'green']},
                  'FLII 0 to 10 noti masked',false); 

var final_metric = final_metric.unmask(0);
final_metric = final_metric.updateMask(Bosque_Etter.eq(1));

var final_metric2 = final_metric2.unmask(0);
final_metric2 = final_metric2.updateMask(Bosque_Etter.eq(1));

var palette_continuous = ['#1a4a00','#c2d426','#e8c754','#675115'];

Map.addLayer(final_metric.clip(Colombia), {min:0,max:10, palette: palette_continuous.reverse()},
                'FLII Colombia all variables',false);

Map.addLayer(final_metric2.clip(Colombia), {min:0,max:10, palette: palette_continuous},
                'FLII Colombia no Ti',false);

var flii_Colombia = ee.Image('users/forestIntegrityONU/FLII_Colombia_unmasked');

Map.addLayer(flii_Colombia, {min:0,max:10, palette: palette_continuous},
                'FLII Colombia');
  
// Export results to enhance visualization

// Export.image.toDrive({
//   image: final_metric,
//   description: 'FLII_Colombia_all_variables',
//   folder: 'FLII_Colombia',
//   maxPixels: 1e13,
//   scale: 300,
//   region: Colombia
// });
